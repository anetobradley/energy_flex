NEED_AGE_BANDS <- 101
}
else if(epc_age == "England and Wales: 1900-1929"){
NEED_AGE_BANDS <- 101
}
else if(epc_age == "England and Wales: 1930-1949"){
NEED_AGE_BANDS <- 102
}
else if(epc_age == "England and Wales: 1950-1966"){
NEED_AGE_BANDS <- 102
}
else if(epc_age == "England and Wales: 1967-1975"){
NEED_AGE_BANDS <- 102
}
else if(epc_age == "England and Wales: 1976-1982"){
NEED_AGE_BANDS <- 103
}
else if(epc_age == "England and Wales: 1983-1990"){
NEED_AGE_BANDS <- 103
}
else if(epc_age == "England and Wales: 1991-1995"){
NEED_AGE_BANDS <- 103
}
else if(epc_age == "England and Wales: 1996-2002"){
NEED_AGE_BANDS <- 103
}else{
NEED_AGE_BANDS <- NA
}
epc_df_cl$NEED_AGE_BANDS <- as.vector(unlist(lapply(epc_df_cl$`construction-age-band`, epc_age_band_convert)))
if(age_bands==1){
epc_df_cl <- filter(epc_df_cl, NEED_AGE_BANDS=="101")
}else if(age_bands==2){
epc_df_cl <- filter(epc_df_cl, NEED_AGE_BANDS=="102")
}else if(age_bands==3){
epc_df_cl <- filter(epc_df_cl, NEED_AGE_BANDS=="103")
}else if(age_bands==4){
epc_df_cl <- filter(epc_df_cl, NEED_AGE_BANDS=="104")
}
epc_built_type_convert <- function(epc_type, epc_form){
if(epc_type=="Bungalow" && epc_form != ""){
built_type = "Bungalow"
}
else if(epc_type=="Flat" && epc_form != ""){
built_type = "Flat"
}
else if(epc_type=="House" && epc_form == "Detached"){
built_type = "Detatched"
}
else if(epc_type=="Maisonette" && epc_form == "Detached"){
built_type = "Detatched"
}
else if(epc_type=="House" && epc_form == "Enclosed End-Terrace"){
built_type = "End terrace"
}
else if(epc_type=="Maisonette" && epc_form == "Enclosed End-Terrace"){
built_type = "End terrace"
}
else if(epc_type=="House" && epc_form == "End-Terrace"){
built_type = "End terrace"
}
else if(epc_type=="Maisonette" && epc_form == "End-Terrace"){
built_type = "End terrace"
}
else if(epc_type=="House" && epc_form == "Enclosed Mid-Terrace"){
built_type = "Mid terrace"
}
else if(epc_type=="Maisonette" && epc_form == "Enclosed Mid-Terrace"){
built_type = "Mid terrace"
}
else if(epc_type=="House" && epc_form == "Mid-Terrace"){
built_type = "Mid terrace"
}
else if(epc_type=="Maisonette" && epc_form == "Mid-Terrace"){
built_type = "Mid terrace"
}
else if(epc_type=="House" && epc_form == "Semi-Detached"){
built_type = "Semi detached"
}
else if(epc_type=="Maisonette" && epc_form == "Semi-Detached"){
built_type = "Semi detached"
}else{
built_type <- NA
}
epc_df_cl$NEED_TYPE <- as.vector(unlist(mapply(epc_built_type_convert, epc_type=epc_df_cl$`property-type`,  epc_form = epc_df_cl$`built-form`)))
epc_df_cl <- filter(epc_df_cl,!is.na(`NEED_TYPE`))
epc_df_cl <- filter(epc_df_cl,!is.na(`NEED_AGE_BANDS`))
epc_df_cl$group <- as.vector((mapply(typology_parser, x=epc_df_cl$NEED_TYPE, y=epc_df_cl$NEED_AGE_BANDS)))
#epc_df_cl$E_INT <- as.numeric(epc_df_cl$`energy-consumption-current`)/as.numeric(epc_df_cl$`total-floor-area`)
if(gas_toggle==TRUE){
epc_df_cl[,"group"] <- epc_df_cl$group + (length(unique(epc_df_cl$group))*as.numeric(epc_df_cl$`mains-gas-flag`=="Y"))
}
# STAN MODEL INPUTS #####
# APPLY SQRT NORMALISATION #
NEED_data_typecast$E_TOT_sqrt <- sqrt(NEED_data_typecast$E_TOT)
NEED_data_typecast$E_TOT_normal <- (NEED_data_typecast$E_TOT_sqrt - mean(NEED_data_typecast$E_TOT_sqrt))/sd(NEED_data_typecast$E_TOT_sqrt)
epc_df_cl <- filter(epc_df_cl, as.numeric(epc_df_cl$`energy-consumption-current`) >= 0)
epc_df_cl$E_CONS_sqrt <- sqrt(as.numeric(epc_df_cl$`energy-consumption-current`))
epc_df_cl$E_CONS_normal <- (epc_df_cl$E_CONS_sqrt - mean(NEED_data_typecast$E_TOT_sqrt))/sd(NEED_data_typecast$E_TOT_sqrt)
epc_priors <- stanc(file = "EPC_Prior_Sampling.stan") # Check Stan file
epc_priors_model <- stan_model(stanc_ret = epc_priors)
epc_priors_haringey<- sampling(epc_priors_model, iter=samples_mcmc, seed=2019, warmup=warmup_mcmc,
chains=chains_mcmc,
refresh = 100,
data=list(N = length(NEED_data_typecast$E_TOT_normal), # Number of instances in the NEED Data
M = length(epc_df_cl$E_CONS_normal),# Number of instances in the EPC data for specific region
T = length(unique(NEED_data_typecast$group)),# Number of households typology groups
E_N = NEED_data_typecast$E_TOT_normal ,
E_M = epc_df_cl$E_CONS_normal,
sigma_N = 1,
tn = as.numeric(NEED_data_typecast$group),
tm = as.numeric(epc_df_cl$group)
),
control = list(#max_treedepth = 10,
adapt_delta = 0.8
)
#save(epc_priors_haringey, file="20210817_EPC_Haringey_Prior.RData")
# EXTRACT DATAFRAME FROM MODEL OUTPUTS FOR PLOTS #
epc_mcmc_dist <- epc_priors_haringey %>%
rstan::extract()
E_prior_mean <- as.data.frame(epc_mcmc_dist$E)
E_prior_mean$sigma <- (epc_mcmc_dist$sigma)
reverse_convert <- function(mu,sig){
eint <- ((rnorm(1,mu,sig)*sd(NEED_data_typecast$E_TOT_sqrt))+mean(NEED_data_typecast$E_TOT_sqrt))^2
}
E_posterior <- as.data.frame(lapply(colnames(as.data.frame(epc_mcmc_dist$E)), function(i){mapply(reverse_convert, mu=E_prior_mean[,i], sig=E_prior_mean$sigma)}))
colnames(E_posterior) <- c(1:24)
require(reshape2)
E_posterior_plot <- melt(E_posterior)
colnames(E_posterior_plot) <- c("group","E_POS")
E_posterior_plot$group <- as.numeric(as.character(E_posterior_plot$group))
E_posterior_plot$LA <- i
# group_names <- list(
#   "1" = "Bungalow, pre-1930",
#   "2" = "Bungalow, 1930-72",
#   "3" = "Bungalow, 1972-99",
#   "4" = "Bungalow, post-2000",
#   "5" = "Detached, pre-1930",
#   "6" = "Detached, 1930-72",
#   "7" = "Detached, 1972-99",
#   "8" = "Detached, post-2000",
#   "9" = "End Terrace, pre-1930",
#   "10" = "End Terrace, 1930-72",
#   "11" = "End Terrace, 1972-99",
#   "12" = "End Terrace, post-2000",
#   "13" = "Flat, pre-1930",
#   "14" = "Flat, 1930-72",
#   "15" = "Flat, 1972-99",
#   "16" = "Flat, post-2000",
#   "17" = "Mid Terrace, pre-1930",
#   "18" = "Mid Terrace, 1930-72",
#   "19" = "Mid Terrace, 1972-99",
#   "20" = "Mid Terrace, post-2000",
#   "21" = "Semi Detached, pre-1930",
#   "22" = "Semi Detached, 1930-72",
#   "23" = "Semi Detached, 1972-99",
#   "24" = "Semi Detached, post-2000"
# )
# facet_labeller <- function(variable,value){
#   return(group_names[value])
# }
# ggplot() + stat_density(data= epc_df_cl, aes(x=as.numeric(`energy-consumption-current`), color="Local Authority EPCs", linetype="Local Authority EPCs"), size = 1,geom="line",position="identity")+
#   stat_density(data=NEED_Plot, aes(x=E_TOT, color="NEED Prior", linetype="NEED Prior"), size = 1,geom="line",position="identity") +
#   stat_density(data=E_posterior_plot, aes(x=E_POS, color="Posterior", linetype="Posterior"), size = 1,geom="line",position="identity") +
#   scale_color_manual(labels= c("Local Authority EPCs","NEED Prior","Posterior"), values=c("#C7DED2","#67a684","#C700D2"), name="Legend")+
#   scale_linetype_manual(labels= c("Local Authority EPCs","NEED Prior","Posterior"), values=c(4,3,1), name="Legend")+
#   facet_wrap(~group, scales = "free_y", ncol = 4, labeller = facet_labeller) +
#   xlim(0,500) +
#   xlab("Energy Intensity kWh/m^2/year")+theme_minimal() + ggsave("/data/outputs/base_distribution.png", width = 16, height = 16, dpi = 200)
#head(E_posterior)
E_posterior_all <- rbind(E_posterior_all, E_posterior_plot)
print(paste("Worflow Finished for LA",i))
}
View(E_posterior)
library(reshape2)
melt(E_posterior)
ggplot(melt(E_posterior)) + geom_histogram(aes(x=value)) + facet_wrap(.~variable, ncols=3)
ggplot(melt(E_posterior)) + geom_histogram(aes(x=value)) + facet_wrap(.~variable, ncol=3)
table(epc_df_cl$group)
View(epc_df_cl)
epc_df_cl$`mainheat-description`
table(epc_df_cl$`mainheat-description`)
table(epc_df_cl$`main-fuel`)
table(epc_df_cl$`mains-gas-flag`)
Sys.setenv("LOCAL_AUTHORITY"="E06000030")
LAD_block <- Sys.getenv("LOCAL_AUTHORITY")
LAD_List <- read.csv("nlac2011.csv") %>%
filter(grepl(LAD_block, LAD20CD))
E_posterior_all <- NULL
for(i in LAD_List$LAD20CD){
epc_df <- EPC_Search(i)
# Need to match age bands (approximately)
epc_df_cl <- filter(epc_df, `construction-age-band` != "")
epc_df_cl <- filter(epc_df_cl, `construction-age-band` != "NO DATA!")
epc_df_cl <- filter(epc_df_cl, `construction-age-band` != "INVALID!")
epc_age_band_convert <- function(epc_age){
if(epc_age == "2018"){
NEED_AGE_BANDS <- 104
}
else if(epc_age == "2020"){
NEED_AGE_BANDS <- 104
}
else if(epc_age == "2019"){
NEED_AGE_BANDS <- 104
}
else if(epc_age == "2021"){
NEED_AGE_BANDS <- 104
}
else if(epc_age == "England and Wales: 2003-2006"){
NEED_AGE_BANDS <- 104
}
else if(epc_age == "England and Wales: 2007-2011"){
NEED_AGE_BANDS <- 104
}
else if(epc_age == "England and Wales: 2012 onwards"){
NEED_AGE_BANDS <- 104
}
else if(epc_age == "England and Wales: 2007 onwards"){
NEED_AGE_BANDS <- 104
}
else if(epc_age == "England and Wales: before 1900"){
NEED_AGE_BANDS <- 101
}
else if(epc_age == "England and Wales: 1900-1929"){
NEED_AGE_BANDS <- 101
}
else if(epc_age == "England and Wales: 1930-1949"){
NEED_AGE_BANDS <- 102
}
else if(epc_age == "England and Wales: 1950-1966"){
NEED_AGE_BANDS <- 102
}
else if(epc_age == "England and Wales: 1967-1975"){
NEED_AGE_BANDS <- 102
}
else if(epc_age == "England and Wales: 1976-1982"){
NEED_AGE_BANDS <- 103
}
else if(epc_age == "England and Wales: 1983-1990"){
NEED_AGE_BANDS <- 103
}
else if(epc_age == "England and Wales: 1991-1995"){
NEED_AGE_BANDS <- 103
}
else if(epc_age == "England and Wales: 1996-2002"){
NEED_AGE_BANDS <- 103
}else{
NEED_AGE_BANDS <- NA
}
epc_df_cl$NEED_AGE_BANDS <- as.vector(unlist(lapply(epc_df_cl$`construction-age-band`, epc_age_band_convert)))
if(age_bands==1){
epc_df_cl <- filter(epc_df_cl, NEED_AGE_BANDS=="101")
}else if(age_bands==2){
epc_df_cl <- filter(epc_df_cl, NEED_AGE_BANDS=="102")
}else if(age_bands==3){
epc_df_cl <- filter(epc_df_cl, NEED_AGE_BANDS=="103")
}else if(age_bands==4){
epc_df_cl <- filter(epc_df_cl, NEED_AGE_BANDS=="104")
}
epc_built_type_convert <- function(epc_type, epc_form){
if(epc_type=="Bungalow" && epc_form != ""){
built_type = "Bungalow"
}
else if(epc_type=="Flat" && epc_form != ""){
built_type = "Flat"
}
else if(epc_type=="House" && epc_form == "Detached"){
built_type = "Detatched"
}
else if(epc_type=="Maisonette" && epc_form == "Detached"){
built_type = "Detatched"
}
else if(epc_type=="House" && epc_form == "Enclosed End-Terrace"){
built_type = "End terrace"
}
else if(epc_type=="Maisonette" && epc_form == "Enclosed End-Terrace"){
built_type = "End terrace"
}
else if(epc_type=="House" && epc_form == "End-Terrace"){
built_type = "End terrace"
}
else if(epc_type=="Maisonette" && epc_form == "End-Terrace"){
built_type = "End terrace"
}
else if(epc_type=="House" && epc_form == "Enclosed Mid-Terrace"){
built_type = "Mid terrace"
}
else if(epc_type=="Maisonette" && epc_form == "Enclosed Mid-Terrace"){
built_type = "Mid terrace"
}
else if(epc_type=="House" && epc_form == "Mid-Terrace"){
built_type = "Mid terrace"
}
else if(epc_type=="Maisonette" && epc_form == "Mid-Terrace"){
built_type = "Mid terrace"
}
else if(epc_type=="House" && epc_form == "Semi-Detached"){
built_type = "Semi detached"
}
else if(epc_type=="Maisonette" && epc_form == "Semi-Detached"){
built_type = "Semi detached"
}else{
built_type <- NA
}
epc_df_cl$NEED_TYPE <- as.vector(unlist(mapply(epc_built_type_convert, epc_type=epc_df_cl$`property-type`,  epc_form = epc_df_cl$`built-form`)))
epc_df_cl <- filter(epc_df_cl,!is.na(`NEED_TYPE`))
epc_df_cl <- filter(epc_df_cl,!is.na(`NEED_AGE_BANDS`))
epc_df_cl$group <- as.vector((mapply(typology_parser, x=epc_df_cl$NEED_TYPE, y=epc_df_cl$NEED_AGE_BANDS)))
#epc_df_cl$E_INT <- as.numeric(epc_df_cl$`energy-consumption-current`)/as.numeric(epc_df_cl$`total-floor-area`)
if(gas_toggle==TRUE){
epc_df_cl[,"group"] <- epc_df_cl$group + (length(unique(epc_df_cl$group))*as.numeric(epc_df_cl$`mains-gas-flag`=="Y"))
}
# STAN MODEL INPUTS #####
# APPLY SQRT NORMALISATION #
NEED_data_typecast$E_TOT_sqrt <- sqrt(NEED_data_typecast$E_TOT)
NEED_data_typecast$E_TOT_normal <- (NEED_data_typecast$E_TOT_sqrt - mean(NEED_data_typecast$E_TOT_sqrt))/sd(NEED_data_typecast$E_TOT_sqrt)
epc_df_cl <- filter(epc_df_cl, as.numeric(epc_df_cl$`energy-consumption-current`) >= 0)
epc_df_cl$E_CONS_sqrt <- sqrt(as.numeric(epc_df_cl$`energy-consumption-current`))
epc_df_cl$E_CONS_normal <- (epc_df_cl$E_CONS_sqrt - mean(NEED_data_typecast$E_TOT_sqrt))/sd(NEED_data_typecast$E_TOT_sqrt)
epc_priors <- stanc(file = "EPC_Prior_Sampling.stan") # Check Stan file
epc_priors_model <- stan_model(stanc_ret = epc_priors)
epc_priors_haringey<- sampling(epc_priors_model, iter=samples_mcmc, seed=2019, warmup=warmup_mcmc,
chains=chains_mcmc,
refresh = 100,
data=list(N = length(NEED_data_typecast$E_TOT_normal), # Number of instances in the NEED Data
M = length(epc_df_cl$E_CONS_normal),# Number of instances in the EPC data for specific region
T = length(unique(NEED_data_typecast$group)),# Number of households typology groups
E_N = NEED_data_typecast$E_TOT_normal ,
E_M = epc_df_cl$E_CONS_normal,
sigma_N = 1,
tn = as.numeric(NEED_data_typecast$group),
tm = as.numeric(epc_df_cl$group)
),
control = list(#max_treedepth = 10,
adapt_delta = 0.8
)
#save(epc_priors_haringey, file="20210817_EPC_Haringey_Prior.RData")
# EXTRACT DATAFRAME FROM MODEL OUTPUTS FOR PLOTS #
epc_mcmc_dist <- epc_priors_haringey %>%
rstan::extract()
E_prior_mean <- as.data.frame(epc_mcmc_dist$E)
E_prior_mean$sigma <- (epc_mcmc_dist$sigma)
reverse_convert <- function(mu,sig){
eint <- ((rnorm(1,mu,sig)*sd(NEED_data_typecast$E_TOT_sqrt))+mean(NEED_data_typecast$E_TOT_sqrt))^2
}
E_posterior <- as.data.frame(lapply(colnames(as.data.frame(epc_mcmc_dist$E)), function(i){mapply(reverse_convert, mu=E_prior_mean[,i], sig=E_prior_mean$sigma)}))
colnames(E_posterior) <- c(1:24)
require(reshape2)
E_posterior_plot <- melt(E_posterior)
colnames(E_posterior_plot) <- c("group","E_POS")
E_posterior_plot$group <- as.numeric(as.character(E_posterior_plot$group))
E_posterior_plot$LA <- i
# group_names <- list(
#   "1" = "Bungalow, pre-1930",
#   "2" = "Bungalow, 1930-72",
#   "3" = "Bungalow, 1972-99",
#   "4" = "Bungalow, post-2000",
#   "5" = "Detached, pre-1930",
#   "6" = "Detached, 1930-72",
#   "7" = "Detached, 1972-99",
#   "8" = "Detached, post-2000",
#   "9" = "End Terrace, pre-1930",
#   "10" = "End Terrace, 1930-72",
#   "11" = "End Terrace, 1972-99",
#   "12" = "End Terrace, post-2000",
#   "13" = "Flat, pre-1930",
#   "14" = "Flat, 1930-72",
#   "15" = "Flat, 1972-99",
#   "16" = "Flat, post-2000",
#   "17" = "Mid Terrace, pre-1930",
#   "18" = "Mid Terrace, 1930-72",
#   "19" = "Mid Terrace, 1972-99",
#   "20" = "Mid Terrace, post-2000",
#   "21" = "Semi Detached, pre-1930",
#   "22" = "Semi Detached, 1930-72",
#   "23" = "Semi Detached, 1972-99",
#   "24" = "Semi Detached, post-2000"
# )
# facet_labeller <- function(variable,value){
#   return(group_names[value])
# }
# ggplot() + stat_density(data= epc_df_cl, aes(x=as.numeric(`energy-consumption-current`), color="Local Authority EPCs", linetype="Local Authority EPCs"), size = 1,geom="line",position="identity")+
#   stat_density(data=NEED_Plot, aes(x=E_TOT, color="NEED Prior", linetype="NEED Prior"), size = 1,geom="line",position="identity") +
#   stat_density(data=E_posterior_plot, aes(x=E_POS, color="Posterior", linetype="Posterior"), size = 1,geom="line",position="identity") +
#   scale_color_manual(labels= c("Local Authority EPCs","NEED Prior","Posterior"), values=c("#C7DED2","#67a684","#C700D2"), name="Legend")+
#   scale_linetype_manual(labels= c("Local Authority EPCs","NEED Prior","Posterior"), values=c(4,3,1), name="Legend")+
#   facet_wrap(~group, scales = "free_y", ncol = 4, labeller = facet_labeller) +
#   xlim(0,500) +
#   xlab("Energy Intensity kWh/m^2/year")+theme_minimal() + ggsave("/data/outputs/base_distribution.png", width = 16, height = 16, dpi = 200)
#head(E_posterior)
E_posterior_all <- rbind(E_posterior_all, E_posterior_plot)
print(paste("Worflow Finished for LA",i))
}
ggplot(melt(E_posterior)) + geom_histogram(aes(x=value)) + facet_wrap(.~variable, ncol=3)
require(dplyr)
set.seed(2019)
setwd("C:/Users/apn30/OneDrive - University of Cambridge/CSIC RA/GitHub_project_repository/energy_flex/02-EnergyModel/01_Base_Distribution")
# Source EPC Search Function
source("EPC_Search_Fn.R")
# Load Local Authority List
LAD_List <- read.csv("nlac2011.csv")
epc_summary_table <- NULL
age_bands=4
mean_NEED=132.991
# Create the mode function.
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# Loop through LADs
for(i in LAD_List$LAD20CD){
epc_df <- EPC_Search(i)
# Need to match age bands (approximately)
epc_df_cl <- filter(epc_df, `construction-age-band` != "")
epc_df_cl <- filter(epc_df_cl, `construction-age-band` != "NO DATA!")
epc_df_cl <- filter(epc_df_cl, `construction-age-band` != "INVALID!")
epc_age_band_convert <- function(epc_age){
if(epc_age == "2018"){
NEED_AGE_BANDS <- 104
}
else if(epc_age == "2020"){
NEED_AGE_BANDS <- 104
}
else if(epc_age == "2019"){
NEED_AGE_BANDS <- 104
}
else if(epc_age == "2021"){
NEED_AGE_BANDS <- 104
}
else if(epc_age == "England and Wales: 2003-2006"){
NEED_AGE_BANDS <- 104
}
else if(epc_age == "England and Wales: 2007-2011"){
NEED_AGE_BANDS <- 104
}
else if(epc_age == "England and Wales: 2012 onwards"){
NEED_AGE_BANDS <- 104
}
else if(epc_age == "England and Wales: 2007 onwards"){
NEED_AGE_BANDS <- 104
}
else if(epc_age == "England and Wales: before 1900"){
NEED_AGE_BANDS <- 101
}
else if(epc_age == "England and Wales: 1900-1929"){
NEED_AGE_BANDS <- 101
}
else if(epc_age == "England and Wales: 1930-1949"){
NEED_AGE_BANDS <- 102
}
else if(epc_age == "England and Wales: 1950-1966"){
NEED_AGE_BANDS <- 102
}
else if(epc_age == "England and Wales: 1967-1975"){
NEED_AGE_BANDS <- 102
}
else if(epc_age == "England and Wales: 1976-1982"){
NEED_AGE_BANDS <- 103
}
else if(epc_age == "England and Wales: 1983-1990"){
NEED_AGE_BANDS <- 103
}
else if(epc_age == "England and Wales: 1991-1995"){
NEED_AGE_BANDS <- 103
}
else if(epc_age == "England and Wales: 1996-2002"){
NEED_AGE_BANDS <- 103
}else{
NEED_AGE_BANDS <- NA
}
}
epc_df_cl$NEED_AGE_BANDS <- as.vector(unlist(lapply(epc_df_cl$`construction-age-band`, epc_age_band_convert)))
if(age_bands==1){
epc_df_cl <- filter(epc_df_cl, NEED_AGE_BANDS=="101")
}else if(age_bands==2){
epc_df_cl <- filter(epc_df_cl, NEED_AGE_BANDS=="102")
}else if(age_bands==3){
epc_df_cl <- filter(epc_df_cl, NEED_AGE_BANDS=="103")
}else if(age_bands==4){
epc_df_cl <- filter(epc_df_cl, NEED_AGE_BANDS=="104")
}
epc_summary_i <- epc_df_cl %>%
summarise(wall_top_rating=mean(`walls-energy-eff`=="Very Good", na.rm=T),
roof_top_rating=mean(`roof-energy-eff`=="Very Good", na.rm=T),
floor_top_rating=mean(`floor-energy-eff`=="Very Good",na.rm=T),
secondary_heating = mean(`secondheat-description`!="None", na.rm = T),
mean_floor_height =mean(as.numeric(`floor-height`), na.rm=T),
social_rental=mean(grepl("rent", epc_df_cl$tenure, ignore.case = TRUE) & grepl("social", epc_df_cl$tenure, ignore.case = TRUE), na.rm=T),
private_rental=mean(grepl("rent", epc_df_cl$tenure, ignore.case = TRUE) & grepl("private", epc_df_cl$tenure, ignore.case = TRUE), na.rm=T),
multiple_glazing_area=mean(as.numeric(epc_df_cl$`multi-glaze-proportion`),na.rm=T),
standard_energy_tarriff=mean(`energy-tariff`=="standard tariff",na.rm = T),
off_peak_tariff=mean(grepl("off-peak", epc_df_cl$`energy-tariff`, ignore.case = TRUE)),
LA=getmode(`local-authority`),
type="All")
epc_summary_high_ene <- epc_df_cl %>%
filter(as.numeric(`energy-consumption-current`)>= mean_NEED)%>%
summarise(wall_top_rating=mean(`walls-energy-eff`=="Very Good", na.rm=T),
roof_top_rating=mean(`roof-energy-eff`=="Very Good", na.rm=T),
floor_top_rating=mean(`floor-energy-eff`=="Very Good",na.rm=T),
secondary_heating = mean(`secondheat-description`!="None", na.rm = T),
mean_floor_height =mean(as.numeric(`floor-height`), na.rm=T),
social_rental=mean(grepl("rent", `tenure`, ignore.case = TRUE) & grepl("social", `tenure`, ignore.case = TRUE), na.rm=T),
private_rental=mean(grepl("rent", `tenure`, ignore.case = TRUE) & grepl("private", `tenure`, ignore.case = TRUE), na.rm=T),
multiple_glazing_area=mean(as.numeric(`multi-glaze-proportion`),na.rm=T),
standard_energy_tarriff=mean(`energy-tariff`=="standard tariff",na.rm = T),
off_peak_tariff=mean(grepl("off-peak", `energy-tariff`, ignore.case = TRUE)),
LA=getmode(`local-authority`),
type="High")
epc_summary_table <- rbind(epc_summary_table,epc_summary_i,epc_summary_high_ene)
print(paste("EPCs summarised for LA",i))
}
View(epc_summary_table)
save(epc_summary_table, file="EPC_Summary.Rda")
